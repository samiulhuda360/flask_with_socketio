import pandas as pd
import sqlite3
import os
import re

# Check if the file exists before deleting it
if os.path.exists('sites_data.db'):
    os.remove('sites_data.db')
    print("Database file 'sites_data.db' deleted.")
else:
    print("Database file 'sites_data.db' not found.")

# Read the Excel file into a pandas DataFrame
df = pd.read_excel('apppasV1.xlsx')

print(df.head)

# Connect to SQLite database (or create one if it doesn't exist)
conn = sqlite3.connect('sites_data.db')
cursor = conn.cursor()

# Create the main 'sites' table
cursor.execute('''
CREATE TABLE IF NOT EXISTS sites (
    site_id INTEGER PRIMARY KEY AUTOINCREMENT,
    sitename TEXT UNIQUE NOT NULL,
    username TEXT NOT NULL,
    app_password TEXT NOT NULL
)
''')



# Create the 'links' table
cursor.execute('''
CREATE TABLE IF NOT EXISTS links (
    link_id INTEGER PRIMARY KEY AUTOINCREMENT,
    site_id INTEGER,
    url TEXT NOT NULL,
    FOREIGN KEY (site_id) REFERENCES sites(site_id)
)
''')

# Insert data from the DataFrame into the 'sites' table
# Exclude the 'site_id' column, as it will be auto-generated by the database
df = df[['sitename', 'username', 'app_password']]



for index, row in df.iterrows():
    sitename = row['sitename'].rstrip('/').lower()  # Remove trailing slash if it exists
    app_password = row['app_password']
    if pd.isna(app_password):
        continue
    pattern = r'^[A-Za-z0-9]{4} [A-Za-z0-9]{4} [A-Za-z0-9]{4} [A-Za-z0-9]{4} [A-Za-z0-9]{4} [A-Za-z0-9]{4}$'

    if not re.match(pattern, app_password):
        continue

    print(app_password)
    cursor.execute("INSERT INTO sites (sitename, username, app_password) VALUES (?, ?, ?)",
                   (sitename, row['username'], app_password))

conn.commit()
conn.close()


def show_table_structure():

    conn = sqlite3.connect('sites_data.db')
    cursor = conn.cursor()

    cursor.execute("PRAGMA table_info(sites)")
    columns = cursor.fetchall()

    for column in columns:
        print(column)

    conn.close()

show_table_structure()

def get_data_by_sitename(sitename):
    conn = sqlite3.connect('sites_data.db')
    cursor = conn.cursor()

    cursor.execute("SELECT site_id, sitename, username, app_password FROM sites WHERE sitename = ?", (sitename,))
    data = cursor.fetchone()

    conn.close()

    return data


def add_link_to_site(sitename, link):
    conn = sqlite3.connect('data.db')
    cursor = conn.cursor()

    # Get the site_id for the given sitename
    cursor.execute("SELECT site_id FROM sites WHERE sitename = ?", (sitename,))
    site_id = cursor.fetchone()

    if site_id:
        cursor.execute("INSERT INTO links (site_id, url) VALUES (?, ?)", (site_id[0], link))

    conn.commit()
    conn.close()




# if site_data:
#     site_id, sitename, username, app_pass = site_data
#     print("site_id:", site_id)
#     print("sitename:", sitename)
#     print("username:", username)
#     print("app_password:", app_pass)
# else:
#     print("Site not found.")

# # Adding links to a site
# links_for_site = ["http://example1.com", "http://example2.com"]
# add_links_to_site('dlinkextendersetup.com', links_for_site)
def get_all_sitenames():
    conn = sqlite3.connect('sites_data.db')  # Use the correct database name
    cursor = conn.cursor()

    cursor.execute("SELECT sitename FROM sites")
    sitenames = [row[0] for row in cursor.fetchall()]

    conn.close()

    return sitenames

sitenames = get_all_sitenames()
print(sitenames)